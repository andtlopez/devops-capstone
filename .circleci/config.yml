# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
orbs:
  aws-eks: circleci/aws-eks@1.0.3
  kubernetes: circleci/kubernetes@0.11.2

jobs:
  build-app:
    docker:
      - image: circleci/python:3.6.7-stretch
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            make install
            # Install hadolint
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
            sudo chmod +x /bin/hadolint 
      - save_cache:
          paths:
            - ./
          key: app-build
  
  test-app:
    docker:
      - image: circleci/python:3.6.7-stretch
    steps:
      - checkout
      - restore_cache:
          keys: [app-build]
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  build-docker:
    docker:
      - image: circleci/golang:1.15
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - restore_cache:
          keys: [app-build]
      - run:
          name: build and push docker image
          command: |
            docker build --tag=andtlopez/devops-capstone:${CIRCLE_WORKFLOW_ID:0:7} .
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push andtlopez/devops-capstone:${CIRCLE_WORKFLOW_ID:0:7}

  update-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: kubernetes/k8s.yml
          resource-name: deployment/devops-capstone
      - run:
          name: update image
          command: |
            kubectl set image deployments/devops-capstone devops-capstone=andtlopez/devops-capstone:${CIRCLE_WORKFLOW_ID:0:7}

workflows:
  default:
    jobs:
      - build-app
      - test-app:
          requires: [build-app]
      - build-docker:
          requires: [test-app]
      - update-deployment:
          cluster-name: DevOpsCapstone-EKS-CLUSTER
          requires: [build-docker]